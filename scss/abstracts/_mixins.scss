@use "sass:map";
@use "variables" as *;
@use "../layout/breakpoints" as *;

@mixin grid($total, $number) {
    flex: 0 0 calc(100% / (#{$total} / #{$number}));
    max-width: calc(100% / (#{$total} / #{$number}));
}

@mixin offset-grid($total-cols, $responsive) {
    @if $responsive {
        @each $break, $value in $containers {
            @include respond(#{$break}) {
                @for $i from 1 through $total-cols {
                    .j-offset-#{$break}-#{$i} {
                        @if $i == $total-cols {
                            margin-left: 0;
                            flex: 0 0 100%;
                            max-width: 100%;
                        } @else {
                            margin-left: calc(100% / (#{$total-cols} / #{$i}));
                            flex: 0 0 calc(100% * ((#{$total-cols} - #{$i}) / #{$total-cols}));
                            max-width: calc(100% *((#{$total-cols} - #{$i}) / #{$total-cols}));
                        }
                    }
                } 
            }
        }
    } @else {
        @for $i from 1 through $total-cols {
            .j-offset-#{$i} {
                @if $i == $total-cols {
                    margin-left: 0;
                    flex: 0 0 100%;
                    max-width: 100%;
                } @else {
                    margin-left: calc(100% / (#{$total-cols} / #{$i}));
                    flex: 0 0 calc(100% * ((#{$total-cols} - #{$i})));
                    max-width: calc(100% * ((#{$total-cols} - #{$i}) / #{$total-cols}));
                }
            }
        }
    }
}

@include offset-grid($total-cols, false);
@include offset-grid($total-cols, true);